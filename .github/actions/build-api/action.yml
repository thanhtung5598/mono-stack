name: 'Build API composite action'
description: 'An example composite action that builds an API image'
inputs:
  image:
    description: 'API Image Name'
    required: true
  push:
    description: 'Push the image to the registry'
    required: false
    default: 'true'
runs:
  using: "composite"
  steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Build API
      id: build-api
      shell: bash
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -f Dockerfile.Api \
        --build-arg AWS_S3_ACCESS_KEY_ID=${{ env.AWS_S3_ACCESS_KEY_ID }} \
        --build-arg AWS_S3_SECRET_ACCESS_KEY=${{ env.AWS_S3_SECRET_ACCESS_KEY }} \
        --build-arg AWS_S3_BUCKET_NAME=${{ env.AWS_S3_BUCKET_NAME }} \
        --build-arg AWS_S3_BUCKET_REGION=${{ env.AWS_S3_BUCKET_REGION }} \
        --build-arg AWS_S3_GATEWAY=${{ env.AWS_S3_GATEWAY }} \
        --build-arg AWS_S3_API_VERSION=${{ env.AWS_S3_API_VERSION }} \
        --build-arg JWT_EXPIRATION_TIME=${{ env.JWT_EXPIRATION_TIME }} \
        --build-arg JWT_PRIVATE_KEY=${{ env.JWT_PRIVATE_KEY }} \
        --build-arg JWT_PUBLIC_KEY=${{ env.JWT_PUBLIC_KEY }} \
        --build-arg GOOGLE_OAUTH_SECRET=${{ env.GOOGLE_OAUTH_SECRET }} \
        --build-arg GOOGLE_OAUTH_CLIENT_ID=${{ env.GOOGLE_OAUTH_CLIENT_ID }} \
        --build-arg GOOGLE_OAUTH_CALLBACKURL=${{ env.GOOGLE_OAUTH_CALLBACKURL }} \
        --build-arg JWT_EXPIRATION_REFESH_TOKEN_TIME=${{ env.JWT_EXPIRATION_REFESH_TOKEN_TIME }} \
        --build-arg DATABASE_URL=${{ env.DATABASE_URL }} \
        --build-arg SHADOW_DATABASE_URL=${{ env.SHADOW_DATABASE_URL }} \
        --build-arg SES_SMTP_USERNAME=${{ env.SES_SMTP_USERNAME }} \
        --build-arg SES_SMTP_PASSWORD=${{ env.SES_SMTP_PASSWORD }} \
        --build-arg SES_HOST=${{ env.SES_HOST }} \
        --build-arg SES_PORT=${{ env.SES_PORT }} \
        --build-arg SES_FROM_MAIL=${{ env.SES_FROM_MAIL }} \
        --build-arg EMAIL_ADMIN=${{ env.EMAIL_ADMIN }} \
        --build-arg REDIS_URL=${{ env.REDIS_URL }} \
        --build-arg REDIS_HOST="${{ env.REDIS_HOST }}" \
        --build-arg REDIS_PORT="${{ env.REDIS_PORT }}" \
        --build-arg REDIS_PASSWORD="${{ env.REDIS_PASSWORD }}" \
        --build-arg REDIS_DB="${{ env.REDIS_DB }}" \
        --build-arg TWITTER_OAUTH_CLIENT_ID=${{ env.TWITTER_OAUTH_CLIENT_ID }} \
        --build-arg TWITTER_OAUTH_SECRET=${{ env.TWITTER_OAUTH_SECRET }} \
        --build-arg TWITTER_OAUTH_CALLBACKURL=${{ env.TWITTER_OAUTH_CALLBACKURL }} \
        --build-arg DOMAIN_URL_CLIENT=${{ env.DOMAIN_URL_CLIENT }} \
        --build-arg EMAIL_ADMIN=${{ env.EMAIL_ADMIN }} \
        --build-arg COOKIES_DOMAIN=${{ env.COOKIES_DOMAIN }} \
        --build-arg APPLE_CLIENT_ID=${{ env.APPLE_CLIENT_ID }} \
        --build-arg APPLE_REDIRECT_URI=${{ env.APPLE_REDIRECT_URI }} \
        --build-arg APPLE_TEAM_ID=${{ env.APPLE_TEAM_ID }} \
        --build-arg APPLE_PRIVATE_KEY="${{ env.APPLE_PRIVATE_KEY }}" \
        --build-arg APPLE_PRIVATE_KEY_ID=${{ env.APPLE_PRIVATE_KEY_ID }} \
        --build-arg SECRET_FOR_AES="${{ env.SECRET_FOR_AES }}" \
        --build-arg TURBO_TOKEN=${{ env.TURBO_TOKEN }} \
        --build-arg TURBO_TEAM=${{ env.TURBO_TEAM }} \
        --build-arg API_PORT=${{ env.API_PORT }} \
        -t ${{ inputs.image }} .
        

    - name: Push API
      if: ${{ inputs.push == 'true' }}
      shell: bash
      run: docker push ${{ inputs.image }}
