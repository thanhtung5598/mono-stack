name: Deploy Integrate

on:
  push:
    branches:
      - integrate

env:
  # Backend Environment Variables
  BE_ENV: production
  BE_PORT: 3001
  BE_EXPOSED_PORT: 4001
  BE_IMAGE: be-monostack
  BE_DOMAIN: monostack-api
  BE_NGINX_FILE: monostack-api.conf
  # Frontend Environment Variables
  FE_ENV: production
  # FE_PORT: 3000
  # FE_EXPOSED_PORT: 4000
  FE_IMAGE: fe-monostack
  FE_DOMAIN: monostack-web
  FE_NGINX_FILE: monostack-web.conf
  # Network
  NETWORK_NAME: monostack-network

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

        # Ensure the Docker network exists
      - name: Create Docker network
        run: |
          sudo docker network inspect ${{ env.NETWORK_NAME }} || sudo docker network create ${{ env.NETWORK_NAME }}

      # Frontend Deployment
      - name: Check Frontend Files Changed
        id: frontend-check
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'apps/web/**'

      - name: Build Frontend Image
        id: build-frontend
        if: steps.frontend-check.outputs.frontend == 'true'
        run: |
          sudo docker build -f Dockerfile.Web \
            --build-arg FE_ENV=${{ env.FE_ENV }} \
            --build-arg FE_PORT=${{ secrets.FE_PORT }} \
            -t ${{ env.FE_IMAGE }} .

      - name: Deploy Frontend
        if: steps.frontend-check.outputs.frontend == 'true'
        run: |
          sudo docker stop ${{ env.FE_IMAGE }} || true
          sudo docker rm ${{ env.FE_IMAGE }} || true
          sudo docker run --name ${{ env.FE_IMAGE }} --detach --restart=unless-stopped \
            --publish ${{ secrets.FE_EXPOSED_PORT }}:${{ secrets.FE_PORT }} \
            --network ${{ env.NETWORK_NAME }} \
            ${{ env.FE_IMAGE }}

      - name: Configure Frontend Nginx
        if: steps.frontend-check.outputs.frontend == 'true'
        run: |
          sudo cp -n ./.nginx/frontend.conf /etc/nginx/conf.d/${{ env.FE_NGINX_FILE }}
          sudo sed -i 's/CHANGE_SRV_NAME/${{ env.FE_DOMAIN }}/g' /etc/nginx/conf.d/${{ env.FE_NGINX_FILE }}
          sudo sed -i 's/CHANGE_PORT/${{ secrets.FE_EXPOSED_PORT }}/g' /etc/nginx/conf.d/${{ env.FE_NGINX_FILE }}

      - name: Restart nginx
        run: sudo nginx -s reload
