name: Deploy Integrate

on:
  push:
    branches:
      - integrate

env:
  # Backend Environment Variables
  BE_NODE_ENV: production
  BE_NODE_PORT: 3001
  BE_EXPOSED_PORT: 4000
  BE_IMAGE: be-monostack
  BE_DOMAIN: integrate-api
  BE_NGINX_FILE: integrate-api.conf
  # Network
  NETWORK_NAME: monostack-network

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2

       # Ensure the Docker network exists
      - name: Create Docker network
        run: |
         docker network inspect ${{ env.NETWORK_NAME }} || docker network create ${{ env.NETWORK_NAME }}

      # Backend Deployment
      - name: Check Backend Files Changed
        id: backend-check
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'apps/api/**'
              - 'packages/database/**'

      - name: Build be image
        id: build-backend
        if: steps.backend-check.outputs.backend == 'true'
        run: |
          docker build -f Dockerfile.Api \
            --build-arg NODE_ENV=${{ env.BE_NODE_ENV }} \
            --build-arg NODE_PORT=${{ env.BE_NODE_PORT }} \
            --build-arg DATABASE_URL=${{ secrets.DATABASE_URL }} \
            -t ${{ env.BE_IMAGE }} .

      - name: Deploy Backend
        if: steps.backend-check.outputs.backend == 'true'
        run: |
          docker run --rm ${{ env.BE_IMAGE }} npx turbo db:deploy
          docker stop ${{ env.BE_IMAGE }} || true
          docker rm ${{ env.BE_IMAGE }} || true
          docker run --name ${{ env.BE_IMAGE }} --detach --restart=unless-stopped \
            --publish ${{ env.BE_EXPOSED_PORT }}:${{ env.BE_NODE_PORT }} \
            --network ${{ env.NETWORK_NAME }} \
            ${{ env.BE_IMAGE }}

      - name: Configure Backend Nginx
        if: steps.backend-check.outputs.backend == 'true'
        run: |
          sudo cp -n ./.nginx/backend.conf /etc/nginx/conf.d/${{ env.BE_NGINX_FILE }}
          sudo sed -i 's/CHANGE_PORT/${{ env.BE_EXPOSED_PORT }}/g' /etc/nginx/conf.d/${{ env.BE_NGINX_FILE }}

      - name: Restart nginx
        run: sudo nginx -s reload
